import asyncio; from sqlmodel import select; from app.models import Audience, RedditPost; from app.core.database import AsyncSessionLocal; async def check_audience(): async with AsyncSessionLocal() as session: result = await session.execute(select(Audience).where(Audience.id == 22)); audience = result.scalar_one_or_none(); print(f"Audience exists: {audience is not None}"); print(f"Is collecting: {audience.is_collecting if audience else None}"); print(f"Collection progress: {audience.collection_progress if audience else None}"); subreddit_names = [s.subreddit_name for s in (audience.subreddits if audience else [])]; print(f"Subreddits: {subreddit_names}"); result = await session.execute(select(RedditPost).where(RedditPost.subreddit_name.in_(subreddit_names)) if subreddit_names else select(RedditPost).where(RedditPost.id < 0)); posts = result.scalars().all(); print(f"Total posts: {len(posts)}"); asyncio.run(check_audience())
