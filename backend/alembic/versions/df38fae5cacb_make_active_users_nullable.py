"""Make active_users nullable

Revision ID: df38fae5cacb
Revises: ef3d746cdbea
Create Date: 2025-03-11 15:29:37.417942

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'df38fae5cacb'
down_revision: Union[str, None] = 'ef3d746cdbea'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_comments_reddit_id', table_name='comments')
    op.drop_table('comments')
    op.drop_index('ix_posts_reddit_id', table_name='posts')
    op.drop_table('posts')
    op.alter_column('subreddits', 'subscribers',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('subreddits', 'active_users',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('subreddits', 'updated_at')
    op.drop_column('subreddits', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('subreddits', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('subreddits', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column('subreddits', 'active_users',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('subreddits', 'subscribers',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('posts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('reddit_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=2000), autoincrement=False, nullable=True),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('upvote_ratio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('num_comments', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_original_content', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('subreddit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['subreddit_id'], ['subreddits.id'], name='posts_subreddit_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='posts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_posts_reddit_id', 'posts', ['reddit_id'], unique=True)
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('reddit_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], name='comments_parent_id_fkey'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='comments_post_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey')
    )
    op.create_index('ix_comments_reddit_id', 'comments', ['reddit_id'], unique=True)
    # ### end Alembic commands ###
