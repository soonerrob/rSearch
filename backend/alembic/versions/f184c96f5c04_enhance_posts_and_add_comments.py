"""enhance_posts_and_add_comments

Revision ID: f184c96f5c04
Revises: add_post_analysis_table
Create Date: 2025-03-16 09:38:22.730292

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f184c96f5c04'
down_revision: Union[str, None] = 'add_post_analysis_table'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Enhance posts table
    op.add_column('redditpost', sa.Column('upvote_ratio', sa.Float(), nullable=True, server_default='1.0'))
    op.add_column('redditpost', sa.Column('is_original_content', sa.Boolean(), nullable=True, server_default='false'))
    op.add_column('redditpost', sa.Column('distinguished', sa.String(length=50), nullable=True))
    op.add_column('redditpost', sa.Column('stickied', sa.Boolean(), nullable=True, server_default='false'))
    op.add_column('redditpost', sa.Column('collection_source', sa.String(length=20), nullable=True))
    op.add_column('redditpost', sa.Column('engagement_score', sa.Float(), nullable=True, server_default='0.0'))
    op.add_column('redditpost', sa.Column('awards', postgresql.JSONB(), nullable=True, server_default='{}'))
    
    # Create comments table
    op.create_table('comments',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('reddit_id', sa.String(length=50), nullable=False),
        sa.Column('post_id', sa.Integer(), nullable=False),
        sa.Column('parent_id', sa.Integer(), nullable=True),
        sa.Column('reddit_parent_id', sa.String(length=50), nullable=True),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('author', sa.String(length=100), nullable=False),
        sa.Column('score', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('depth', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('path', sa.ARRAY(sa.Integer()), nullable=True, server_default='{}'),
        sa.Column('is_submitter', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('distinguished', sa.String(length=50), nullable=True),
        sa.Column('stickied', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('awards', postgresql.JSONB(), nullable=False, server_default='{}'),
        sa.Column('edited', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('engagement_score', sa.Float(), nullable=False, server_default='0.0'),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('collected_at', sa.TIMESTAMP(timezone=True), nullable=False, server_default=sa.text('now()')),
        sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['post_id'], ['redditpost.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes
    op.create_index(op.f('ix_comments_reddit_id'), 'comments', ['reddit_id'], unique=True)
    op.create_index(op.f('ix_comments_post_id'), 'comments', ['post_id'], unique=False)
    op.create_index(op.f('ix_comments_parent_id'), 'comments', ['parent_id'], unique=False)
    op.create_index(op.f('ix_comments_reddit_parent_id'), 'comments', ['reddit_parent_id'], unique=False)

    # Fix postanalysis changes that were auto-detected
    # First drop the existing index if it exists
    try:
        op.drop_index('ix_postanalysis_post_id', table_name='postanalysis')
    except:
        pass  # Index might not exist
    
    # Then create the new index
    op.alter_column('postanalysis', 'post_id',
               existing_type=sa.INTEGER(),
               nullable=False)  # Changed from nullable=True to maintain data integrity
    op.create_index('ix_postanalysis_post_id', 'postanalysis', ['post_id'], unique=True)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop comments table and its indexes
    op.drop_index(op.f('ix_comments_reddit_parent_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_parent_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_post_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_reddit_id'), table_name='comments')
    op.drop_table('comments')
    
    # Remove added columns from posts table
    op.drop_column('redditpost', 'awards')
    op.drop_column('redditpost', 'engagement_score')
    op.drop_column('redditpost', 'collection_source')
    op.drop_column('redditpost', 'stickied')
    op.drop_column('redditpost', 'distinguished')
    op.drop_column('redditpost', 'is_original_content')
    op.drop_column('redditpost', 'upvote_ratio')
    
    # Restore postanalysis changes
    op.drop_index('ix_postanalysis_post_id', table_name='postanalysis')
    op.alter_column('postanalysis', 'post_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
